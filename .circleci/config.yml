version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1
  kubernetes: circleci/kubernetes@1.3

jobs:
  build-and-push:
    docker:
      - image: cimg/base:2023.03
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and push backend image
          command: |
            cd backend
            docker build -t ${AWS_ECR_ACCOUNT_URL}/eks-app-backend:${CIRCLE_SHA1} .
            echo $AWS_ECR_PASSWORD | docker login --username AWS --password-stdin ${AWS_ECR_ACCOUNT_URL}
            docker push ${AWS_ECR_ACCOUNT_URL}/eks-app-backend:${CIRCLE_SHA1}
      - run:
          name: Build and push frontend image
          command: |
            cd frontend
            docker build -t ${AWS_ECR_ACCOUNT_URL}/eks-app-frontend:${CIRCLE_SHA1} .
            docker push ${AWS_ECR_ACCOUNT_URL}/eks-app-frontend:${CIRCLE_SHA1}

  deploy:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - kubernetes/install-kubectl
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Update kubeconfig
          command: aws eks update-kubeconfig --name eks-nebulance --region eu-central-1
      - run:
          name: Deploy application
          command: |
            # Update image tags in Helm values
            sed -i "s|tag:.*|tag: \"${CIRCLE_SHA1}\"|" helm/backend/values.yaml
            sed -i "s|tag:.*|tag: \"${CIRCLE_SHA1}\"|" helm/frontend/values.yaml
            
            # Deploy with Helm
            helm upgrade --install postgresql ./helm/postgresql
            helm upgrade --install backend ./helm/backend
            helm upgrade --install frontend ./helm/frontend

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-push:
          context: aws-credentials
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - build-and-push
          context: aws-credentials
          filters:
            branches:
              only: main